package igym.entities;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import lombok.*;

import java.util.UUID;

import com.fasterxml.jackson.annotation.JsonBackReference;

import igym.entities.enums.Status;

/**
 * Represents an exercise that belongs to a workout, including details like name, weight, repetitions, and sets.
 * 
 * <p>
 * Each exercise is associated with one workout through a many-to-one relationship.
 * Field-level validations ensure input correctness across layers.
 * </p>
 *
 * <p>
 * Lombok is used to generate getters and setters for convenience. The {@code id} field uses 
 * {@code @Setter(AccessLevel.NONE)} to prevent manual assignment, as it is automatically generated by the database.
 * </p>
 */

@Entity
@Getter
@Setter
@NoArgsConstructor
public class Exercise {

    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    @Setter(AccessLevel.NONE)
    private UUID id;

    @NotBlank(message = "Exercise name is required")
    @Column(nullable = false, length = 50)
    @Size(min = 3, max = 50, message = "Name must be between 3 and 50 characters")
    private String name;

    @PositiveOrZero(message = "Weight must be zero or positive")
    private double weight;

    @Min(value = 1, message = "Reps must be at least 1")
    private int numReps;

    @Min(value = 1, message = "Sets must be at least 1")
    private int numSets;

    private String note;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private Status status = Status.active;

    @ManyToOne
    @JoinColumn(name = "workout_id", nullable = false)
    @JsonBackReference
    private Workout workout;
}
